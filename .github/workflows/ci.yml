name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache taplo-cli
        id: cache-taplo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/taplo
          key: ${{runner.os}}-taplo-0.9.3

      - name: Install taplo-cli if not cached
        if: steps.cache-taplo.outputs.cache-hit != 'true'
        shell: bash
        run: cargo install taplo-cli@${TAPLO_CLI_VERSION} --locked
        env:
          TAPLO_CLI_VERSION: 0.9.3

      - name: Run taplo fmt
        run: taplo fmt --check

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  check-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  build-default-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --workspace --all-targets

  build-all-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --workspace --all-targets --all-features

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate docs
        run: cargo doc --no-deps --workspace --lib --all-features

  check-msrv:
    runs-on: ubuntu-latest
    env:
      MSRV: 1.75.0
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSRV
        run: rustup toolchain install ${MSRV} --no-self-update

      - name: Check code
        run: cargo +${MSRV} check

  run-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --all --all-features
        env:
          RUST_BACKTRACE: 1
